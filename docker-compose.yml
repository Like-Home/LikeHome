services:
  frontend:
    build: frontend
    volumes:
      - ./frontend/dist:/app/dist
  backend:
    restart: always
    build: backend
    command: poetry run python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./backend:/app
    env_file: backend/.env
    environment:
      - ENV=production
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - POSTGRES_USER=postgres
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=postgres
      - POSTGRES_PASSWORD=postgres
    depends_on:
      - postgres
  postgres:
    image: postgres
    restart: always
    ports:
      - 5432:5432
    volumes:
      - ./postgres/database:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
      - POSTGRES_PASSWORD=postgres
  caddy:
    image: caddy
    volumes:
      - ./Caddyfile.docker:/etc/caddy/Caddyfile
      - ./frontend/dist:/usr/share/caddy
      - ./caddy_data:/data
    ports:
      - "80:80"
  # TODO: setup for stripe webhooks
  stripe-cli:
   image: stripe/stripe-cli
   container_name: stripe-cli
   env_file: backend/.env
   command: "listen --api-key=${STRIPE_SECRET_KEY} --events=checkout.session.completed --forward-to http://backend:8080/api/checkout/webhook/"
