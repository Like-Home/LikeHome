name: Backend build test

on: [push]

env:
  GOOGLE_CLIENT_ID="GITHUB_WORKFLOW_TEST_ENVIRONMENT"
  GOOGLE_CLIENT_SECRET="GITHUB_WORKFLOW_TEST_ENVIRONMENT"
  AMADEUS_API_KEY="GITHUB_WORKFLOW_TEST_ENVIRONMENT"
  AMADEUS_API_SECRET="GITHUB_WORKFLOW_TEST_ENVIRONMENT"
  HOTELBEDS_ENDPOINT="GITHUB_WORKFLOW_TEST_ENVIRONMENT"
  HOTELBEDS_API_KEY="GITHUB_WORKFLOW_TEST_ENVIRONMENT"
  HOTELBEDS_API_SECRET="GITHUB_WORKFLOW_TEST_ENVIRONMENT"

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install and configure Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.3.2
          virtualenvs-create: true
          virtualenvs-in-project: true

      #      - name: Set up cache
      #        uses: actions/cache@v2
      #        id: cached-poetry-dependencies
      #        with:
      #          path: .venv
      #          key: venv-${{ runner.os }}-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies via poetry
        working-directory: ./backend
        run: poetry install
      #        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'

      - name: Run Django migrations
        working-directory: ./backend
        run: |
          source .venv/bin/activate
          python manage.py migrate
          python manage.py makemigrations
          python manage.py migrate --run-syncdb

      - name: Lint with autopep8
        working-directory: ./backend
        run: |
          source .venv/bin/activate
          make format